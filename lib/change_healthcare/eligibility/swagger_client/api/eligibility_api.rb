=begin
#Eligibility

#Reference for developers

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.17

=end

require 'uri'

module SwaggerClient
  class EligibilityApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Seamlessly check a member eligibility and health plan benefit details with hundreds of payers.
    # takes a json object model of a 270 EDI request and produces a json object model of a 271 response
    # @param authorization Bearer Your-Access-Token
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Response]
    def eligibility(authorization, request, opts = {})
      data, _status_code, _headers = eligibility_with_http_info(authorization, request, opts)
      data
    end

    # Seamlessly check a member eligibility and health plan benefit details with hundreds of payers.
    # takes a json object model of a 270 EDI request and produces a json object model of a 271 response
    # @param authorization Bearer Your-Access-Token
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Array<(Response, Fixnum, Hash)>] Response data, response status code and response headers
    def eligibility_with_http_info(authorization, request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: EligibilityApi.eligibility ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling EligibilityApi.eligibility"
      end
      # verify the required parameter 'request' is set
      if @api_client.config.client_side_validation && request.nil?
        fail ArgumentError, "Missing the required parameter 'request' when calling EligibilityApi.eligibility"
      end
      # resource path
      local_var_path = '/'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Response')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EligibilityApi#eligibility\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # healthCheck
    # @param authorization Bearer Your-Access-Token
    # @param [Hash] opts the optional parameters
    # @return [HealthCheck]
    def health_check_using_get(authorization, opts = {})
      data, _status_code, _headers = health_check_using_get_with_http_info(authorization, opts)
      data
    end

    # healthCheck
    # @param authorization Bearer Your-Access-Token
    # @param [Hash] opts the optional parameters
    # @return [Array<(HealthCheck, Fixnum, Hash)>] HealthCheck data, response status code and response headers
    def health_check_using_get_with_http_info(authorization, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: EligibilityApi.health_check_using_get ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling EligibilityApi.health_check_using_get"
      end
      # resource path
      local_var_path = '/healthcheck'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HealthCheck')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EligibilityApi#health_check_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # send and receive raw x12 for 270 and 271 transactions
    # @param authorization Bearer Your-Access-Token
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Response]
    def raw_x12_using_post(authorization, request, opts = {})
      data, _status_code, _headers = raw_x12_using_post_with_http_info(authorization, request, opts)
      data
    end

    # send and receive raw x12 for 270 and 271 transactions
    # @param authorization Bearer Your-Access-Token
    # @param request request
    # @param [Hash] opts the optional parameters
    # @return [Array<(Response, Fixnum, Hash)>] Response data, response status code and response headers
    def raw_x12_using_post_with_http_info(authorization, request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: EligibilityApi.raw_x12_using_post ...'
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling EligibilityApi.raw_x12_using_post"
      end
      # verify the required parameter 'request' is set
      if @api_client.config.client_side_validation && request.nil?
        fail ArgumentError, "Missing the required parameter 'request' when calling EligibilityApi.raw_x12_using_post"
      end
      # resource path
      local_var_path = '/raw-x12'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Authorization'] = authorization

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Response')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EligibilityApi#raw_x12_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
